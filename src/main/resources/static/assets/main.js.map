{"version":3,"sources":["./src/app/models/user.ts","./src/app/pages/view-post/view-post.component.ts","./src/app/pages/view-post/view-post.component.html","./src/app/pages/feed/feed.component.ts","./src/app/pages/feed/feed.component.html","./src/environments/environment.ts","./src/app/pages/page-not-found/page-not-found.component.ts","./src/app/pages/page-not-found/page-not-found.component.html","./src/app/pages/login/login.component.ts","./src/app/pages/login/login.component.html","./src/app/pages/list-qualification/list-qualification.component.ts","./src/app/pages/list-qualification/list-qualification.component.html","./src/app/models/post.ts","./src/app/pages/edit-profile/edit-profile.component.ts","./src/app/pages/edit-profile/edit-profile.component.html","./src/app/pages/list-hashtags/list-hashtags.component.ts","./src/app/pages/list-hashtags/list-hashtags.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/pages/new-post/new-post.component.ts","./src/app/pages/new-post/new-post.component.html","./src/app/pages/profile/profile.component.ts","./src/app/pages/profile/profile.component.html","./src/app/app.module.ts","./src/app/services/token-storage.service.ts","./src/app/helpers/auth.interceptor.ts","./src/app/pages/register/register.component.ts","./src/app/pages/register/register.component.html","./src/app/pages/bookmarks/bookmarks.component.ts","./src/app/pages/bookmarks/bookmarks.component.html","./src/app/pages/edit-posts/edit-posts.component.ts","./src/app/pages/edit-posts/edit-posts.component.html","./src/app/services/auth.service.ts","./src/app/pages/hashtag-search/hashtag-search.component.ts","./src/app/pages/hashtag-search/hashtag-search.component.html","./src/app/pages/post-hashtags/post-hashtags.component.ts","./src/app/pages/post-hashtags/post-hashtags.component.html","./src/app/services/user.service.ts","./src/app/pages/list-comments/list-comments.component.ts","./src/app/pages/list-comments/list-comments.component.html","./src/app/app-routing.module.ts","./src/app/services/http-data.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["export class User {\r\n  id: number;\r\n  username: string;\r\n  email: string;\r\n  firstName: string;\r\n  lastName: string;\r\n  telephone: string;\r\n  createdAt: string;\r\n  updatedAt: string;\r\n  subscribers: number;\r\n  subscriptions: number;\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {HttpDataService} from '../../services/http-data.service';\r\nimport {ActivatedRoute} from '@angular/router';\r\nimport {Post} from '../../models/post';\r\nimport {User} from '../../models/user';\r\nimport {Bookmark} from '../../models/bookmark';\r\nimport {TokenStorageService} from '../../services/token-storage.service';\r\n\r\n@Component({\r\n  selector: 'app-view-post',\r\n  templateUrl: './view-post.component.html',\r\n  styleUrls: ['./view-post.component.css']\r\n})\r\nexport class ViewPostComponent implements OnInit {\r\n  postId: number;\r\n  post: Post;\r\n  user: User;\r\n  author: string;\r\n  bookmark: Bookmark;\r\n  userId: number;\r\n  userPostId: number;\r\n  alreadyBookmark: boolean;\r\n  canBeEdited: boolean;\r\n  constructor(private tokenStorageService: TokenStorageService, private httpDataService: HttpDataService, private router: ActivatedRoute) {}\r\n\r\n  ngOnInit(): void {\r\n    this.router.params.subscribe(params => {\r\n      this.postId = +params.id;\r\n    });\r\n    this.alreadyBookmark = this.validateBookmark();\r\n    this.post = new Post();\r\n    this.post.user = new User();\r\n    this.user = new User();\r\n    this.getPost();\r\n    this.userId = this.tokenStorageService.getGlobalId();\r\n    console.log(this.alreadyBookmark);\r\n    console.log('El usuario actual es: ', this.userId);\r\n    console.log('El usuario del perfil es: ', this.userPostId);\r\n  }\r\n\r\n  verifyProperty(): void{\r\n    if (this.userId === this.post.userId){\r\n      this.canBeEdited = true;\r\n    } else{\r\n      this.canBeEdited = false;\r\n    }\r\n  }\r\n\r\n  getPost(): void{\r\n    this.httpDataService.getPostById(this.postId).subscribe((response: any) => {\r\n      this.post = response;\r\n      this.getUser(this.post.userId);\r\n    });\r\n  }\r\n\r\n  getUser(userId): void{\r\n    this.httpDataService.getUserById(userId).subscribe((response: any) => {\r\n      this.post.user = response;\r\n      this.verifyProperty();\r\n    });\r\n  }\r\n  getAuthor(userId): string{\r\n    if (userId !== undefined) {\r\n      this.httpDataService.getUserById(userId).subscribe((response: any) => {\r\n        this.author = response.firstName + ' ' + response.lastName;\r\n      });\r\n      return this.author;\r\n    }\r\n    else {\r\n      return 'error';\r\n    }\r\n  }\r\n  addBookmark(): void{\r\n    this.httpDataService.addBookmark(1, this.postId  ).subscribe((response: any) => {\r\n      this.bookmark = response.content;\r\n    });\r\n  }\r\n  validateBookmark(): boolean {\r\n    this.httpDataService.validateBookmark(1, this.postId).subscribe(\r\n      data => {\r\n        this.alreadyBookmark = false;\r\n      },\r\n      error => {\r\n        this.alreadyBookmark = true;\r\n      }\r\n    );\r\n    return this.alreadyBookmark === true;\r\n  }\r\n\r\n  removeBookmark(): void {\r\n    this.httpDataService.removeBookmark(1, this.postId).subscribe((response: any) => {\r\n      this.bookmark = response.content;\r\n    });\r\n  }\r\n\r\n  deletePost(): void{\r\n    this.httpDataService.removePost(this.userId, this.postId).subscribe((response: any) =>{\r\n      console.log(this.userId);\r\n      console.log(this.postId);\r\n      this.post = response.content;\r\n    });\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <div class=\"row\">\r\n    <!-- Post Content Column -->\r\n    <div class=\"col-lg-8\">\r\n      <!-- Title -->\r\n      <h1 class=\"mt-4\">{{ post.title }}</h1>\r\n\r\n\r\n      <p class=\"lead\">una publicación de <a routerLink=\"/profile/{{post.userId}}\">{{post.user.username}}<!--{{getAuthor(post.userId)}}--></a></p>\r\n      <hr>\r\n\r\n      <!-- Date/Time -->\r\n      <p> Publicado el  {{ post.createdAt }}</p>\r\n\r\n      <!-- Update Time -->\r\n      <p> Ultima vez actualizado {{post.updatedAt}}</p>\r\n\r\n      <hr>\r\n\r\n      <!-- Description Post -->\r\n      <p>{{post.description}}</p>\r\n\r\n      <!-- Preview Image -->\r\n      <img class=\"img-fluid rounded\" src=\"https://placehold.it/900x300\" alt=\"\">\r\n\r\n      <hr>\r\n\r\n      <div *ngIf=\"alreadyBookmark;else elseblock\">\r\n        <a class=\"btn btn-primary\" (click)=\"addBookmark()\" href=\"/post/{{postId}}\">Añadir a favoritos</a>\r\n        <br>\r\n      </div>\r\n      <ng-template #elseblock>\r\n        <a class=\"btn btn-primary\" (click)=\"removeBookmark()\" href=\"/post/{{postId}}\">Quitar de favoritos</a>\r\n        <br>\r\n      </ng-template>\r\n      <br>\r\n\r\n      <div *ngIf=\"canBeEdited\">\r\n        <div>\r\n          <a class=\"btn btn-primary\" href=\"post/{{this.postId}}/hashtags\">\r\n             Agregar  Hashtags\r\n          </a>\r\n        </div>\r\n        <br>\r\n        <div>\r\n          <a class=\"btn btn-primary\" href=\"/post/{{this.postId}}/edit\">Editar post</a>\r\n        </div>\r\n        <br>\r\n        <div>\r\n          <a class=\"btn btn-danger\" href=\"/profile/{{this.userId}}\" (click)=\"deletePost()\">Eliminar Post</a>\r\n        </div>\r\n      </div>\r\n      <hr>\r\n\r\n\r\n      <!-- Post Conte -->\r\n      <p> {{post.content}} </p>\r\n\r\n      <app-list-comments [postId]=postId></app-list-comments>\r\n\r\n    </div>\r\n\r\n    <!-- Sidebar Widgets Column -->\r\n    <div class=\"col-md-4\">\r\n\r\n      <!-- Search Widget -->\r\n      <div class=\"card my-4\">\r\n        <h5 class=\"card-header\">Search</h5>\r\n        <div class=\"card-body\">\r\n          <div class=\"input-group\">\r\n            <input type=\"text\" class=\"form-control\" placeholder=\"Search for...\">\r\n            <span class=\"input-group-append\">\r\n                <button class=\"btn btn-secondary\" type=\"button\">Go!</button>\r\n              </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Hashtag Widget -->\r\n      <app-list-hashtags [postId]=postId></app-list-hashtags>\r\n      <app-list-qualification [postId]=\"postId\"></app-list-qualification>\r\n\r\n\r\n      <!-- Side Widget -->\r\n      <div class=\"card my-4\">\r\n        <h5 class=\"card-header\">Consejo del dia!</h5>\r\n        <div class=\"card-body\">\r\n          “No tenía miedo a las dificultades: lo que la asustaba era la obligación de tener que escoger un camino. Escoger un camino significaba abandonar otros.”Paulo Coelho.\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n\r\n  </div>\r\n  <!-- /.row -->\r\n\r\n</div>\r\n<!-- /.container -->\r\n","import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {HttpDataService} from '../../services/http-data.service';\r\nimport {Router} from '@angular/router';\r\nimport {Post} from '../../models/post';\r\nimport {Bookmark} from '../../models/bookmark';\r\nimport {TokenStorageService} from '../../services/token-storage.service';\r\nimport {UserService} from '../../services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-feed',\r\n  templateUrl: './feed.component.html',\r\n  styleUrls: ['./feed.component.css']\r\n})\r\n\r\nexport class FeedComponent implements OnInit {\r\n  currentUser: any;\r\n  posts: Post[];\r\n  author: string;\r\n  userId: number;\r\n  users: { username }[];\r\n  constructor(private tokenStorageService: TokenStorageService, private httpDataService: HttpDataService,\r\n              private router: Router, private userService: UserService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.currentUser = this.tokenStorageService.getUser();\r\n    if (this.currentUser){\r\n      this.userService.getAll().subscribe(\r\n        response => {\r\n          console.log(response);\r\n          this.users = response;\r\n        },\r\n          error => {\r\n          console.log(error.error.errorMessage);\r\n          });\r\n    }\r\n    this.posts = [];\r\n    this.author = '';\r\n    this.getAllPosts();\r\n\r\n  }\r\n  getAllPosts(): void{\r\n    this.httpDataService.getAllPosts().subscribe((response: any) => {\r\n      this.posts = response.content;\r\n      this.posts.reverse();\r\n      console.log(response.content);\r\n    });\r\n  }\r\n  getAuthor(userId): string{\r\n    if (userId !== undefined) {\r\n      this.httpDataService.getUserById(userId).subscribe((response: any) => {\r\n        this.author = response.firstName + ' ' + response.lastName;\r\n      });\r\n      return this.author;\r\n    }\r\n    else {\r\n      return 'error';\r\n    }\r\n  }\r\n\r\n}\r\n","<!-- Page Content -->\r\n<div class=\"container\">\r\n  <div class=\"row\">\r\n    <!-- Feed Entries Column -->\r\n    <div class=\"col-md-8\">\r\n      <h1 class=\"my-4\">Feed\r\n        <small>EasyStory</small>\r\n      </h1>\r\n      <!-- Blog Post -->\r\n      <div *ngFor=\"let post of posts\" class=\"card mb-4\">\r\n        <img class=\"card-img-top\" src=\"https://placehold.it/750x300\" alt=\"Card image cap\">\r\n        <div class=\"card-body\">\r\n          <h2 class=\"card-title\">{{ post.title }}</h2>\r\n          <p class=\"card-text\">{{ post.description }}</p>\r\n          <a routerLink=\"/post/{{post.id}}\" class=\"btn btn-primary\">Leer mas &rarr;</a>\r\n        </div>\r\n        <div class=\"card-footer text-muted\">\r\n          Publicado el {{ post.createdAt }} por\r\n          <a routerLink=\"/profile/{{post.userId}}\">autor</a>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Pagination -->\r\n      <ul class=\"pagination justify-content-center mb-4\">\r\n        <li class=\"page-item\">\r\n          <a class=\"page-link\" href=\"#\">&larr; Older</a>\r\n        </li>\r\n        <li class=\"page-item disabled\">\r\n          <a class=\"page-link\" href=\"#\">Newer &rarr;</a>\r\n        </li>\r\n      </ul>\r\n\r\n    </div>\r\n\r\n    <!-- Sidebar Widgets Column -->\r\n    <div class=\"col-md-4\">\r\n\r\n      <!-- Search Widget -->\r\n      <div class=\"card my-4\">\r\n        <h5 class=\"card-header\">Search</h5>\r\n        <div class=\"card-body\">\r\n          <div class=\"input-group\">\r\n            <input type=\"text\" class=\"form-control\" placeholder=\"Search for...\">\r\n            <span class=\"input-group-append\">\r\n                <button class=\"btn btn-secondary\" type=\"button\">Go!</button>\r\n              </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Hashtag Widget -->\r\n      <app-list-hashtags></app-list-hashtags>\r\n\r\n      <!-- Side Widget -->\r\n      <div class=\"card my-4\">\r\n        <h5 class=\"card-header\">Frase del dia</h5>\r\n        <div class=\"card-body\">\r\n          You can put anything you want inside of these side widgets. They are easy to use, and feature the new Bootstrap 4 card containers!\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n\r\n  </div>\r\n  <!-- /.row -->\r\n\r\n</div>\r\n<!-- /.container -->\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-page-not-found',\r\n  templateUrl: './page-not-found.component.html',\r\n  styleUrls: ['./page-not-found.component.css']\r\n})\r\nexport class PageNotFoundComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"container not-found\">\r\n  <div class=\"row\">\r\n    <div class=\"col-lg-12 text-center\">\r\n      <h3 class=\"mt-5\"><strong>Esta página no está disponible</strong></h3>\r\n      <p class=\"lead\">Es posible que el enlace esté roto o que se haya eliminado<br> la página. Verifica que el enlace que quieres abrir es<br> correcto.</p>\r\n      <a class=\"btn btn-primary\" routerLink=\"/feed\" role=\"button\">Ir a la sección de inicio</a>\r\n      <a routerLink=\"/feed\">...o ir al centro de ayuda</a>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {AuthService} from '../../services/auth.service';\r\nimport {TokenStorageService} from '../../services/token-storage.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  form: FormGroup;\r\n  item = {\r\n    username: '',\r\n    password: ''\r\n  };\r\n  isLoggedIn = false;\r\n  isLoginFailed = false;\r\n  errorMessage = '';\r\n  roles: string[] = [];\r\n  constructor(private formBuilder: FormBuilder,\r\n              private router: Router,\r\n              private authService: AuthService,\r\n              private tokenStorageService: TokenStorageService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.form = this.formBuilder.group({\r\n      username: this.item.username,\r\n      password: this.item.password\r\n    });\r\n    if (this.tokenStorageService.getToken()) {\r\n      this.isLoggedIn = true;\r\n      this.roles = this.tokenStorageService.getUser().roles;\r\n    }\r\n  }\r\n  reloadPage(): void {\r\n    window.location.reload();\r\n  }\r\n  onSubmit(): void {\r\n    if (this.form.invalid) {\r\n      return;\r\n    }\r\n    console.log(this.item);\r\n    this.authService.login(this.item).subscribe(\r\n      data => {\r\n        console.log(data);\r\n        this.tokenStorageService.saveToken(data.token);\r\n        this.tokenStorageService.saveUser(data);\r\n        this.isLoginFailed = false;\r\n        this.isLoggedIn = true;\r\n        this.roles = this.tokenStorageService.getUser().roles;\r\n        return this.router.navigate(['/feed']).then(() => {\r\n          console.log(this.router.url);\r\n          window.location.reload();\r\n        });\r\n      },\r\n      error => {\r\n        console.log(error.error.errorMessage);\r\n        this.errorMessage = error.error.errorMessage;\r\n        this.isLoginFailed = true;\r\n        this.isLoggedIn = false;\r\n      }\r\n    );\r\n  }\r\n}\r\n","<div class=\"container-fluid\">\r\n  <div class=\"row no-gutter\">\r\n    <div class=\"d-none d-md-flex col-md-4 col-lg-6 bg-image\"></div>\r\n    <div class=\"col-md-8 col-lg-6\">\r\n      <div class=\"login d-flex align-items-center py-5\">\r\n        <div class=\"container\">\r\n          <div class=\"row\">\r\n            <div class=\"col-md-9 col-lg-8 mx-auto\">\r\n              <h3 class=\"login-heading mb-4\">Bienvenido</h3>\r\n              <form>\r\n                <div class=\"form-label-group\">\r\n                  <input [(ngModel)]=\"item.username\" name=\"first\">\r\n                </div>\r\n\r\n                <div class=\"form-label-group\">\r\n                  <input [(ngModel)]=\"item.password \" name=\"second\" type=\"password\">\r\n                </div>\r\n\r\n                <div class=\"custom-control custom-checkbox mb-3\">\r\n                  <input type=\"checkbox\" class=\"custom-control-input\" id=\"customCheck1\">\r\n                  <label class=\"custom-control-label\" for=\"customCheck1\">Recordar contraseña</label>\r\n                </div>\r\n                <button class=\"btn btn-lg btn-primary btn-block btn-login text-uppercase font-weight-bold mb-2\" type=\"submit\" (click)=\"onSubmit()\">Sign in</button>\r\n                <div class=\"text-center\">\r\n                  <a class=\"small\" href=\"#\">Olvidaste la contraseña?</a></div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import {Component, Input, OnInit} from '@angular/core';\r\nimport {HttpDataService} from '../../services/http-data.service';\r\n// tslint:disable-next-line:import-spacing\r\nimport {Qualification} from  '../../models/qualification';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-list-qualification',\r\n  templateUrl: './list-qualification.component.html',\r\n  styleUrls: ['./list-qualification.component.css']\r\n})\r\nexport class ListQualificationsComponent implements OnInit {\r\n  @Input() postId: number;\r\n  userId: number;\r\n  author: string;\r\n  qualification: number;\r\n  qualifications: Qualification[];\r\n  hasQualified: false;\r\n  constructor(private httpDataService: HttpDataService) { }\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.qualifications = [];\r\n    this.userId = 1;\r\n    if (this.postId) {\r\n      console.log('Consiguiendo calificaciones del post ', this.postId);\r\n      this.getAllQualificationsByPostId();\r\n    }else {\r\n      console.log('postId no defined');\r\n    }\r\n  }\r\n\r\n  getAllQualificationsByPostId(): void{\r\n    this.httpDataService.getAllQualificationsByPostId(this.postId).subscribe((response: any) => {\r\n      this.qualifications = response.content;\r\n    });\r\n  }\r\n  addQualifications(): void{\r\n    console.log(this.qualification);\r\n    this.httpDataService.addQualification(1, this.postId, {qualification: this.qualification})\r\n      .subscribe(response => {\r\n        console.log(response);\r\n        this.ngOnInit();\r\n      });\r\n  }\r\n}\r\n","<!-- Qualification Form -->\r\n<div class=\"card my-4\">\r\n  <h5 class=\"card-header\">Deja una calificación</h5>\r\n  <div class=\"card-body\">\r\n    <div class=\"form-group\">\r\n      <input placeholder=\"Escribe un calificación aqui...\"\r\n             type=\"number\"\r\n             required\r\n             [(ngModel)]=\"qualification\"\r\n      >\r\n      <button type=\"submit\" class=\"btn btn-primary\" (click)=\"addQualifications()\">Enviar</button>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!-- Single Qualification -->\r\n<div *ngFor=\"let qualification of qualifications\" class=\"media mb-4\">\r\n  <img class=\"d-flex mr-3 rounded-circle\" src=\"https://placehold.it/50x50\" alt=\"\">\r\n  <div class=\"media-body\">\r\n    <h5 class=\"mt-0\">Usuario ({{ qualification.createdAt }})</h5>\r\n    {{ qualification.qualification }}\r\n  </div>\r\n</div>\r\n","import {User} from './user';\r\n\r\nexport class Post {\r\n  id: number;\r\n  user: User;\r\n  userId: number;\r\n  title: string;\r\n  description: string;\r\n  content: string;\r\n  createdAt: string;\r\n  updatedAt: string;\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {User} from '../../models/user';\r\nimport {HttpDataService} from '../../services/http-data.service';\r\nimport {TokenStorageService} from '../../services/token-storage.service';\r\n\r\n@Component({\r\n  selector: 'app-edit-profile',\r\n  templateUrl: './edit-profile.component.html',\r\n  styleUrls: ['./edit-profile.component.css']\r\n})\r\nexport class EditProfileComponent implements OnInit {\r\n  content = {\r\n    username: '',\r\n    password: '',\r\n    firstName: '',\r\n    lastName: '',\r\n    email: '',\r\n    telephone: ''\r\n  };\r\n  user: User[];\r\n  userId: number;\r\n  constructor(private tokenStorageService: TokenStorageService, private httpDataService: HttpDataService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.user = [];\r\n    this.userId = this.tokenStorageService.getGlobalId();\r\n    this.getProfile();\r\n  }\r\n  getProfile(): void{\r\n    this.httpDataService.getUserById(this.tokenStorageService.getGlobalId()).subscribe((response: any) => {\r\n      this.user = response;\r\n      this.content.username = response.username;\r\n      this.content.password = response.password;\r\n      this.content.firstName = response.firstName;\r\n      this.content.lastName = response.lastName;\r\n      this.content.email = response.email;\r\n      this.content.telephone = response.telephone;\r\n      console.log(this.content);\r\n    });\r\n  }\r\n\r\n  editProfile(): void{\r\n    this.httpDataService.editProfile(this.tokenStorageService.getGlobalId(), this.content).subscribe(() => {\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"card my-4\">\r\n  <h3 class=\"card-header\">Ingrese su nuevo usuario: </h3>\r\n  <div class=\"form-group\">\r\n    <input placeholder=\"Escriba su usuario aquí...\" type=\"text\" class=\"form-control form-control-lg\" required [(ngModel)]=\"content.username\">\r\n  </div>\r\n  <h3 class=\"card-header\">Ingrese su nueva contraseña: </h3>\r\n  <div class=\"form-group\">\r\n    <input placeholder=\"Escriba su conraseña aquí...\" type=\"text\" class=\"form-control\" required [(ngModel)]=\"content.password\">\r\n  </div>\r\n  <h3 class=\"card-header\">Ingrese su nuevo nombre: </h3>\r\n  <div class=\"form-group\">\r\n    <input placeholder=\"Escriba su nombre aquí...\" type=\"text\" class=\"form-control\" required [(ngModel)]=\"content.firstName\">\r\n  </div>\r\n  <h3 class=\"card-header\">Ingrese su nuevo apellido: </h3>\r\n  <div class=\"form-group\">\r\n    <input placeholder=\"Escriba su apellido aquí...\" type=\"text\" class=\"form-control form-control-sm\" required [(ngModel)]=\"content.lastName\">\r\n  </div>\r\n  <h3 class=\"card-header\">Ingrese su nuevo email: </h3>\r\n  <div class=\"form-group\">\r\n    <input placeholder=\"Escriba su email aquí...\" type=\"text\" class=\"form-control form-control-sm\" required [(ngModel)]=\"content.email\">\r\n  </div>\r\n  <h3 class=\"card-header\">Ingrese su nuevo telefono: </h3>\r\n  <div class=\"form-group\">\r\n    <input placeholder=\"Escriba su telefono aquí...\" type=\"text\" class=\"form-control form-control-sm\" required [(ngModel)]=\"content.telephone\">\r\n  </div>\r\n\r\n  <a class=\"btn btn-primary btn-sm\" type=\"submit\" class=\"btn btn-primary\" href=\"profile/{{userId}}\" (click)=\"editProfile()\">Submit</a>\r\n</div>\r\n","import {Component, Input, OnInit} from '@angular/core';\r\nimport {HttpDataService} from '../../services/http-data.service';\r\nimport {Router} from '@angular/router';\r\nimport {Hashtag} from '../../models/hashtag';\r\n\r\n@Component({\r\n  selector: 'app-list-hashtags',\r\n  templateUrl: './list-hashtags.component.html',\r\n  styleUrls: ['./list-hashtags.component.css']\r\n})\r\nexport class ListHashtagsComponent implements OnInit {\r\n  @Input() postId: number;\r\n\r\n  hashtags: Hashtag[];\r\n  constructor(private httpDataService: HttpDataService, private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.hashtags = [];\r\n    console.log('Hashtags module activado');\r\n    if (this.postId) {\r\n      console.log('Consiguiendo hashtags del post id', this.postId);\r\n      this.getHashtagsByPostId();\r\n    }\r\n    else{\r\n      console.log('Consiguiendo todos los hashtags');\r\n      this.getAllHashtags();\r\n    }\r\n  }\r\n\r\n  getAllHashtags(): void{\r\n    this.httpDataService.getAllHashtags().subscribe((response: any) => {\r\n      this.hashtags = response.content;\r\n    });\r\n  }\r\n  getHashtagsByPostId(): void{\r\n    this.httpDataService.getAllHashtagsByPostId(this.postId).subscribe((response: any) => {\r\n      this.hashtags = response.content;\r\n    });\r\n  }\r\n\r\n}\r\n","<!-- Hashtags Widget -->\r\n<div class=\"card my-4\">\r\n  <h5 class=\"card-header\">Hashtags</h5>\r\n  <div class=\"card-body\">\r\n    <div class=\"row\">\r\n      <p *ngFor = \"let hashtag of hashtags\" class=\"hashtag-list\">\r\n        <a class=\"btn btn-secondary\" routerLink=\"/hashtag/{{hashtag.id}}\">\r\n          <strong>#{{hashtag.name}}</strong>\r\n        </a>\r\n      </p>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import {Component, OnInit} from '@angular/core';\r\nimport { TokenStorageService} from './services/token-storage.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements  OnInit {\r\n  title = 'easystory-open';\r\n  private roles: string[];\r\n  isLoggedIn = false;\r\n  username: string;\r\n  userid: number;\r\n  constructor(private tokenStorageService: TokenStorageService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.isLoggedIn = !!this.tokenStorageService.getToken();\r\n    if (this.isLoggedIn) {\r\n      const user = this.tokenStorageService.getUser();\r\n      this.roles = user.roles;\r\n      this.username = user.username;\r\n      this.userid = this.tokenStorageService.getGlobalId();\r\n      console.log('El username es: ', this.username);\r\n      console.log('El user id es: ', this.userid);\r\n    }\r\n  }\r\n  logout(): void {\r\n    this.tokenStorageService.signOut();\r\n    window.location.reload();\r\n  }\r\n}\r\n","<!-- Navigation -->\r\n<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark fixed-top\">\r\n  <div class=\"container\">\r\n    <a class=\"navbar-brand\" routerLink=\"/feed\">EasyStory</a>\r\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarResponsive\" aria-controls=\"navbarResponsive\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span class=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div class=\"collapse navbar-collapse\" id=\"navbarResponsive\">\r\n      <ul class=\"navbar-nav ml-auto\">\r\n        <div class=\"collapse navbar-collapse\" id=\"navbarResponsive\" *ngIf=\"isLoggedIn==true\">\r\n          <li class=\"nav-item\">\r\n            <a class=\"btn btn-primary\" href=\"/new-post\" role=\"button\" style=\"color: white\">+ nuevo post</a>\r\n          </li>\r\n          <li class=\"nav-item active\">\r\n            <a class=\"nav-link\" routerLink=\"/feed\">Feed\r\n              <span class=\"sr-only\">(current)</span>\r\n            </a>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link\" routerLink=\"/bookmarks\">Marcadores</a>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link\" routerLink=\"/profile/{{userid}}\">Perfil</a>\r\n          </li>\r\n        </div>\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" href=\"https://easystory.marcomnrq.repl.co/\">Acerca de</a>\r\n        </li>\r\n        <div *ngIf=\"isLoggedIn==true;else elseblock\">\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link\" href (click)=\"logout()\">Log out</a>\r\n          </li>\r\n        </div>\r\n        <ng-template #elseblock>\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link\" href=\"login\">Log in</a>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n            <a class=\"nav-link\" href=\"register\">Sign in</a>\r\n          </li>\r\n        </ng-template>\r\n\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</nav>\r\n\r\n<!-- Page Content -->\r\n<router-outlet></router-outlet>\r\n\r\n<!-- Footer -->\r\n<footer class=\"py-5 bg-dark\">\r\n  <div class=\"container\">\r\n    <p class=\"m-0 text-center text-white\">Copyright &copy; EasyStory 2020</p>\r\n  </div>\r\n  <!-- /.container -->\r\n</footer>\r\n\r\n<!-- Bootstrap core JavaScript -->\r\n<script src=\"vendor/jquery/jquery.min.js\"></script>\r\n<script src=\"vendor/bootstrap/js/bootstrap.bundle.min.js\"></script>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {Post} from '../../models/post';\r\nimport {HttpDataService} from '../../services/http-data.service';\r\n\r\n@Component({\r\n  selector: 'app-new-post',\r\n  templateUrl: './new-post.component.html',\r\n  styleUrls: ['./new-post.component.css']\r\n})\r\nexport class NewPostComponent implements OnInit {\r\n  content = {\r\n    title: '',\r\n    description: '',\r\n    content: ''\r\n  };\r\n  post: Post[];\r\n\r\n  constructor(private httpDataService: HttpDataService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.post = [];\r\n  }\r\n\r\n  addNewPost(): void {\r\n    this.content.content = this.content.content.replace(/(?:\\r\\n|\\r|\\n)/g, '<br>');\r\n    this.httpDataService.addNewPost(1, this.content).subscribe((response: any) => {\r\n      this.post = response.content;\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"card my-4\">\r\n  <h1 class=\"card-header\">Escriba el titulo: </h1>\r\n  <div class=\"form-group\">\r\n    <input placeholder=\"Escriba su titulo aquí...\" type=\"text\" class=\"form-control form-control-lg\" required [(ngModel)]=\"content.title\">\r\n  </div>\r\n\r\n\r\n  <h2 class=\"card-header\">Escriba la descripción: </h2>\r\n  <div class=\"form-group\">\r\n    <input placeholder=\"Escriba su descripción aquí...\" type=\"text\" class=\"form-control\" required [(ngModel)]=\"content.description\">\r\n  </div>\r\n\r\n  <h3 class=\"card-header\">Escriba el contenido: </h3>\r\n  <div class=\"form-group\">\r\n    <input placeholder=\"Escriba su contenido aquí...\" type=\"text\" class=\"form-control form-control-sm\" required [(ngModel)]=\"content.content\">\r\n  </div>\r\n  <button type=\"submit\" class=\"btn btn-primary\" (click)=\"addNewPost()\" routerLink=\"/profile/1\">Submit</button>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {HttpDataService} from '../../services/http-data.service';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {User} from '../../models/user';\r\nimport {Post} from '../../models/post';\r\nimport {Subscribe} from '../../models/subscribe';\r\nimport {TokenStorageService} from '../../services/token-storage.service';\r\nimport {UserService} from '../../services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.css']\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n  currentUser: any;\r\n  userId: number;\r\n  newUserId: number;\r\n  user: User;\r\n  posts: Post[];\r\n  content: string;\r\n  subscription: Subscribe[];\r\n  suscrito: boolean;\r\n  users: { username }[];\r\n  userNow: number;\r\n\r\n  constructor(private tokenStorageService: TokenStorageService, private httpDataService: HttpDataService,\r\n              private router: ActivatedRoute, private userService: UserService) {\r\n  }\r\n  ngOnInit(): void {\r\n    this.currentUser = this.tokenStorageService.getUser();\r\n    if (this.currentUser){\r\n      this.userService.getAll().subscribe(\r\n        response => {\r\n          console.log(response);\r\n          this.users = response;\r\n        },\r\n        error => {\r\n          console.log(error.error.errorMessage);\r\n        });\r\n    }\r\n    this.router.params.subscribe(params => {\r\n      this.userId = +params.id;\r\n      this.newUserId = +params.userId;\r\n    });\r\n    this.suscrito = this.verifySubs();\r\n    console.log('Es: ', this.suscrito);\r\n    this.user = new User();\r\n    this.posts = [];\r\n    this.subscription = [];\r\n    this.userNow = this.tokenStorageService.getGlobalId();\r\n    this.getUser();\r\n    this.getPosts();\r\n  }\r\n  getUser(): void {\r\n    this.httpDataService.getUserById(this.userId).subscribe((response: any) => {\r\n      this.user = response;\r\n    });\r\n  }\r\n  getPosts(): void{\r\n    this.httpDataService.getAllPostByUserId(this.userId).subscribe((response: any) => {\r\n      this.posts = response.content;\r\n    });\r\n  }\r\n\r\n  addNewSubscription(): void {\r\n    console.log(this.content);\r\n    this.httpDataService.addSubscription(1, this.userId, {content: this.content}).subscribe((response: any) => {\r\n      this.subscription = response.content;\r\n    });\r\n    console.log('El usuario se suscribio correctamente');\r\n  }\r\n\r\n  removeSubscription(): void {\r\n    console.log(this.content);\r\n    this.httpDataService.removeSuscription(1, this.userId).subscribe((response: any) => {\r\n      this.subscription = response.content;\r\n    });\r\n    console.log('El usuario se desuscribio correctamente');\r\n  }\r\n\r\n  verifySubs(): boolean {\r\n    console.log(this.content);\r\n    this.httpDataService.getSubscription(1, 3).subscribe(\r\n      data => {\r\n        this.suscrito = true;\r\n      },\r\n      error => {\r\n        this.suscrito = false;\r\n      }\r\n    );\r\n    return this.suscrito === true;\r\n  }\r\n\r\n}\r\n","<!-- Page Content -->\r\n<div class=\"container\">\r\n\r\n  <!-- Heading Row -->\r\n  <div class=\"row align-items-center my-5\">\r\n    <div class=\"col-lg-6\">\r\n      <h1 class=\"font-weight-light\">{{user.firstName}} {{user.lastName}}</h1>\r\n        <p>Miembro desde {{user.createdAt}}</p>\r\n      <p><strong>{{user.subscribers}}</strong> subscriptores</p>\r\n      <p><strong>{{user.subscriptions}}</strong> subscripciones</p>\r\n      <div *ngIf=\"suscrito == false && this.userNow!=this.userId\">\r\n        <a class=\"btn btn-primary\" (click)=addNewSubscription() href=\"/profile/{{ user.id }}\">Suscribirse</a>\r\n      </div>\r\n      <div *ngIf=\"suscrito == true && this.userNow!=this.userId\">\r\n        <a class=\"btn btn-primary\" (click)=removeSubscription() href=\"/profile/{{ user.id }}\">Desuscribirse</a>\r\n      </div>\r\n\r\n      <br>\r\n\r\n      <div *ngIf=\"this.userId == 1\">\r\n        <a class=\"btn btn-primary\" href=\"/profile/{{user.id}}/edit\">Editar perfil</a>\r\n      </div>\r\n\r\n    </div>\r\n    <!-- /.col-md-4 -->\r\n    <div class=\"col-lg-6\">\r\n      <img class=\"img-fluid rounded mb-4 mb-lg-0\" src=\"https://placehold.it/900x400\" alt=\"\">\r\n    </div>\r\n    <!-- /.col-lg-8 -->\r\n  </div>\r\n  <!-- /.row -->\r\n\r\n  <!-- Call to Action Well -->\r\n  <div class=\"card text-white bg-secondary my-5 py-4 text-center\">\r\n    <div class=\"card-body\">\r\n      <p class=\"text-white m-0\">This call to action card is a great place to showcase some important information or display a clever tagline!</p>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Content Row - List of posts -->\r\n  <div class=\"row\">\r\n    <div *ngFor=\"let post of posts\" class=\"col-md-4 mb-5\">\r\n      <div class=\"card h-100\">\r\n        <div class=\"card-body\">\r\n          <h4 class=\"card-title\">{{ post.title }}</h4>\r\n          <p class=\"card-text\"> {{ post.description }} </p>\r\n        </div>\r\n        <div class=\"card-footer\">\r\n          <a class=\"btn btn-primary btn-sm\" routerLink=\"/post/{{ post.id }}\">Ver post</a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <!-- /.row -->\r\n</div>\r\n<!-- /.container -->\r\n\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport {enableProdMode, NgModule} from '@angular/core';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FeedComponent } from './pages/feed/feed.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { ProfileComponent } from './pages/profile/profile.component';\r\nimport { ViewPostComponent } from './pages/view-post/view-post.component';\r\nimport { ListHashtagsComponent } from './pages/list-hashtags/list-hashtags.component';\r\nimport { PageNotFoundComponent } from './pages/page-not-found/page-not-found.component';\r\nimport { BookmarksComponent } from './pages/bookmarks/bookmarks.component';\r\nimport { ListCommentsComponent } from './pages/list-comments/list-comments.component';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport { NewPostComponent } from './pages/new-post/new-post.component';\r\nimport { EditProfileComponent } from './pages/edit-profile/edit-profile.component';\r\nimport { LoginComponent} from './pages/login/login.component';\r\nimport { RegisterComponent} from './pages/register/register.component';\r\nimport {authInterceptorProviders} from './helpers/auth.interceptor';\r\nimport { EditPostsComponent } from './pages/edit-posts/edit-posts.component';\r\nimport {ListQualificationsComponent} from './pages/list-qualification/list-qualification.component';\r\nimport { PostHashtagsComponent } from './pages/post-hashtags/post-hashtags.component';\r\nimport { HashtagSearchComponent } from './pages/hashtag-search/hashtag-search.component';\r\n\r\nenableProdMode();\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    FeedComponent,\r\n    ProfileComponent,\r\n    ViewPostComponent,\r\n    ListHashtagsComponent,\r\n    PageNotFoundComponent,\r\n    BookmarksComponent,\r\n    ListCommentsComponent,\r\n    NewPostComponent,\r\n    EditProfileComponent,\r\n    RegisterComponent,\r\n    LoginComponent,\r\n    EditPostsComponent,\r\n    ListQualificationsComponent,\r\n    PostHashtagsComponent,\r\n    HashtagSearchComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    BrowserAnimationsModule,\r\n    MatCardModule,\r\n    FormsModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  providers: [authInterceptorProviders],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","// token-storage.service.ts\r\n// JSON Web Token Storage Service\r\n\r\nimport { Injectable } from '@angular/core';\r\n\r\nconst TOKEN_KEY = 'auth-token';\r\nconst USER_KEY = 'auth-user';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TokenStorageService {\r\n\r\n  constructor() { }\r\n  public signOut(): void {\r\n    window.sessionStorage.clear();\r\n  }\r\n  public saveToken(token: string): void {\r\n    window.sessionStorage.removeItem(TOKEN_KEY);\r\n    window.sessionStorage.setItem(TOKEN_KEY, token);\r\n  }\r\n  public getToken(): string {\r\n    return window.sessionStorage.getItem(TOKEN_KEY);\r\n  }\r\n  public saveUser(user): void {\r\n    window.sessionStorage.removeItem(USER_KEY);\r\n    window.sessionStorage.setItem(USER_KEY, JSON.stringify(user));\r\n  }\r\n  public getUser = () => JSON.parse(window.sessionStorage.getItem(USER_KEY));\r\n\r\n  public getGlobalId(): number {\r\n    return 1;\r\n  }\r\n}\r\n\r\n","// auth.interceptor.ts\r\n// Inspection and Transformation Method\r\n// to add Token if available\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor, HTTP_INTERCEPTORS\r\n} from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport {TokenStorageService} from '../services/token-storage.service';\r\n\r\nconst TOKEN_HEADER_KEY = 'Authorization';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n\r\n  constructor(private tokenStorageService: TokenStorageService) {}\r\n\r\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\r\n    let authRequest = request;\r\n    const token = this.tokenStorageService.getToken();\r\n    if (token != null) {\r\n      authRequest = request.clone({\r\n        headers: request.headers.set(TOKEN_HEADER_KEY, `Bearer ${token}`)});\r\n    }\r\n    return next.handle(authRequest);\r\n  }\r\n}\r\nexport const authInterceptorProviders = [\r\n  { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true}\r\n];\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","\r\n  <div class=\"row\">\r\n    <div class=\"col-lg-10 col-xl-9 mx-auto\">\r\n      <div class=\"card card-signin flex-row my-5\">\r\n        <div class=\"card-img-left d-none d-md-flex\">\r\n        </div>\r\n        <div class=\"card-body\">\r\n          <h5 class=\"card-title text-center\">Register</h5>\r\n          <form class=\"form-signin\">\r\n            <div class=\"form-label-group\">\r\n              <input type=\"text\" id=\"inputUserame\" class=\"form-control\" required autofocus>\r\n              <label for=\"inputUserame\">Username</label>\r\n            </div>\r\n\r\n            <div class=\"form-label-group\">\r\n              <input type=\"email\" id=\"inputEmail\" class=\"form-control\" required>\r\n              <label for=\"inputEmail\">Email address</label>\r\n            </div>\r\n\r\n            <hr>\r\n\r\n            <div class=\"form-label-group\">\r\n              <input type=\"password\" id=\"inputPassword\" class=\"form-control\" required>\r\n              <label for=\"inputPassword\">Password</label>\r\n            </div>\r\n\r\n            <div class=\"form-label-group\">\r\n              <input type=\"password\" id=\"inputConfirmPassword\" class=\"form-control\" required>\r\n              <label for=\"inputConfirmPassword\">Confirm password</label>\r\n            </div>\r\n\r\n            <button class=\"btn btn-lg btn-primary btn-block text-uppercase\" type=\"submit\">Register</button>\r\n            <a class=\"d-block text-center mt-2 small\" href=\"#\">Sign In</a>\r\n            <hr class=\"my-4\">\r\n            <button class=\"btn btn-lg btn-google btn-block text-uppercase\" type=\"submit\"> Sign up with Google</button>\r\n            <button class=\"btn btn-lg btn-facebook btn-block text-uppercase\" type=\"submit\"> Sign up with Facebook</button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Bookmark} from '../../models/bookmark';\r\nimport {HttpDataService} from '../../services/http-data.service';\r\nimport {ActivatedRoute} from '@angular/router';\r\nimport {Post} from '../../models/post';\r\n\r\n@Component({\r\n  selector: 'app-bookmarks',\r\n  templateUrl: './bookmarks.component.html',\r\n  styleUrls: ['./bookmarks.component.css']\r\n})\r\nexport class BookmarksComponent implements OnInit {\r\n  userId: number;\r\n  posts: Post[];\r\n  bookmarks: Bookmark[];\r\n  constructor(private httpDataService: HttpDataService, private router: ActivatedRoute) { }\r\n\r\n  ngOnInit(): void {\r\n    this.userId = 1;\r\n    this.posts = [];\r\n    this.bookmarks = [];\r\n    this.getBookmarks();\r\n  }\r\n  getBookmarks(): void{\r\n    this.httpDataService.getAllBookmarks(this.userId).subscribe((response: any) => {\r\n      this.bookmarks = response.content;\r\n      if (this.bookmarks.length > 0){\r\n        this.getPosts();\r\n      }\r\n    });\r\n  }\r\n  getPosts(): void{\r\n    for (const value of this.bookmarks) {\r\n      this.httpDataService.getPostById(value.postId).subscribe((response: any) => {\r\n        console.log('Conseguido el post con id: ', value.postId);\r\n        this.posts.push(response);\r\n      });\r\n    }\r\n  }\r\n  deleteBookmark(postId): void{\r\n    this.httpDataService.deleteBookmark(this.userId, postId).subscribe((response: any) => {\r\n      console.log(response);\r\n      this.ngOnInit();\r\n    });\r\n  }\r\n}\r\n","<!-- Page Content -->\r\n<div class=\"container\">\r\n  <!-- Page Heading -->\r\n  <h1 class=\"my-4\">Marcadores\r\n    <small>Tienes {{bookmarks.length}} publicaciones marcadas</small>\r\n  </h1>\r\n\r\n  <!-- Project One -->\r\n  <div *ngFor=\"let post of posts\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-7\">\r\n        <a href=\"#\">\r\n          <img class=\"img-fluid rounded mb-3 mb-md-0\" src=\"https://placehold.it/700x300\" alt=\"\">\r\n        </a>\r\n      </div>\r\n      <div class=\"col-md-5\">\r\n        <h3>{{post.title }}</h3>\r\n        <p>{{ post.description }}</p>\r\n        <a routerLink=\"/post/{{post.id}}\" class=\"btn btn-primary\">Ver publicación</a>\r\n        <p></p>\r\n        <a (click)=\"deleteBookmark(post.id)\" class=\"btn btn-danger\">Eliminar marcador</a>\r\n      </div>\r\n    </div>\r\n    <!-- /.row -->\r\n\r\n    <hr>\r\n  </div>\r\n\r\n  <!-- Pagination -->\r\n  <ul class=\"pagination justify-content-center\">\r\n    <li class=\"page-item\">\r\n      <a class=\"page-link\" href=\"#\" aria-label=\"Previous\">\r\n        <span aria-hidden=\"true\">&laquo;</span>\r\n        <span class=\"sr-only\">Previous</span>\r\n      </a>\r\n    </li>\r\n    <li class=\"page-item\">\r\n      <a class=\"page-link\" href=\"#\">1</a>\r\n    </li>\r\n    <li class=\"page-item\">\r\n      <a class=\"page-link\" href=\"#\">2</a>\r\n    </li>\r\n    <li class=\"page-item\">\r\n      <a class=\"page-link\" href=\"#\">3</a>\r\n    </li>\r\n    <li class=\"page-item\">\r\n      <a class=\"page-link\" href=\"#\" aria-label=\"Next\">\r\n        <span aria-hidden=\"true\">&raquo;</span>\r\n        <span class=\"sr-only\">Next</span>\r\n      </a>\r\n    </li>\r\n  </ul>\r\n\r\n</div>\r\n<!-- /.container -->\r\n","import {Component, Input, OnInit} from '@angular/core';\r\nimport {HttpDataService} from '../../services/http-data.service';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {Post} from '../../models/post';\r\nimport {TokenStorageService} from '../../services/token-storage.service';\r\n\r\n@Component({\r\n  selector: 'app-edit-posts',\r\n  templateUrl: './edit-posts.component.html',\r\n  styleUrls: ['./edit-posts.component.css']\r\n})\r\nexport class EditPostsComponent implements OnInit {\r\n  userId: number;\r\n  content = {\r\n    title: '',\r\n    description: '',\r\n    content: ''\r\n  };\r\n  postId: number;\r\n  post: Post[];\r\n  constructor(private tokenStorageService: TokenStorageService,\r\n              private httpDataService: HttpDataService, private router: ActivatedRoute) { }\r\n\r\n  ngOnInit(): void {\r\n    this.router.params.subscribe( params => {\r\n      this.postId = +params.id;\r\n    });\r\n    this.getPost();\r\n  }\r\n\r\n  getPost(): void{\r\n    console.log(this.content);\r\n    this.httpDataService.getPostById(this.postId).subscribe((response: any) => {\r\n      this.post = response;\r\n      this.content.title = response.title;\r\n      this.content.description = response.description;\r\n      this.content.content = response.content;\r\n    });\r\n  }\r\n\r\n  updatePost(): void {\r\n    console.log(this.content);\r\n    this.httpDataService.updatePost(this.tokenStorageService.getGlobalId(), this.postId, this.content)\r\n      .subscribe(response => {\r\n        console.log(response);\r\n        this.ngOnInit();\r\n      });\r\n  }\r\n}\r\n","<!-- Qualification Form -->\r\n<div class=\"card my-4\">\r\n  <h5 class=\"card-header\">Edita el post</h5>\r\n  <div class=\"card-body\">\r\n    <div class=\"row-cols-1\">\r\n      <div class=\"input-group\">\r\n        <div class=\"input-group-prepend\">\r\n          <span class=\"input-group-text\">Ingrese el titulo</span>\r\n        </div>\r\n        <textarea class=\"form-control\" aria-label=\"With textarea\" [(ngModel)]=\"content.title\"></textarea>\r\n      </div>\r\n      <br>\r\n      <div class=\"input-group\">\r\n        <div class=\"input-group-prepend\">\r\n          <span class=\"input-group-text\">Ingrese la descripción: </span>\r\n        </div>\r\n        <textarea class=\"form-control\" aria-label=\"With textarea\" [(ngModel)]=\"content.description\"></textarea>\r\n      </div>\r\n      <br>\r\n      <div class=\"input-group\">\r\n        <div class=\"input-group-prepend\">\r\n          <span class=\"input-group-text\">Ingrese el contenido: </span>\r\n        </div>\r\n        <textarea class=\"form-control\" aria-label=\"With textarea\" [(ngModel)]=\"content.content\"></textarea>\r\n      </div>\r\n      <br>\r\n      <a class=\"btn btn-primary\" href=\"post/{{postId}}\" (click)=\"updatePost()\">Enviar</a>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n","// auth.service.ts\r\n// Authentication Service\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\n\r\nconst AUTH_API = 'https://easystory-api.herokuapp.com/api/auth/';\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({\r\n    'Content-Type': 'application/json'\r\n  })\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n  login(credentials): Observable<any> {\r\n    return this.http.post(AUTH_API + 'sign-in', {\r\n      username: credentials.username,\r\n      password: credentials.password\r\n    }, httpOptions);\r\n  }\r\n  register(user): Observable<any> {\r\n    return this.http.post(AUTH_API + 'sign-up', {\r\n      username: user.username,\r\n      email: user.email,\r\n      password: user.password\r\n    }, httpOptions);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {TokenStorageService} from '../../services/token-storage.service';\r\nimport {HttpDataService} from '../../services/http-data.service';\r\nimport {ActivatedRoute} from '@angular/router';\r\nimport {Post} from '../../models/post';\r\nimport {Hashtag} from '../../models/hashtag';\r\n\r\n@Component({\r\n  selector: 'app-hashtag-search',\r\n  templateUrl: './hashtag-search.component.html',\r\n  styleUrls: ['./hashtag-search.component.css']\r\n})\r\nexport class HashtagSearchComponent implements OnInit {\r\n  hashtagId: number;\r\n  hashtag: Hashtag;\r\n  posts: Post[];\r\n\r\n  constructor(private tokenStorageService: TokenStorageService,\r\n              private httpDataService: HttpDataService,\r\n              private router: ActivatedRoute) {\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.router.params.subscribe(params => {\r\n      this.hashtagId = +params.id;\r\n    });\r\n    this.getTag();\r\n    this.getPosts();\r\n  }\r\n  getTag(): void{\r\n    this.httpDataService.getHashtagById(this.hashtagId).subscribe((response: any) => {\r\n      this.hashtag = response;\r\n    });\r\n  }\r\n  getPosts(): void {\r\n    this.httpDataService.getAllPostsByHashtagId(this.hashtagId).subscribe((response: any) => {\r\n      this.posts = response.content;\r\n    });\r\n  }\r\n\r\n}\r\n","<!-- Feed Entries Column -->\r\n<div class=\"col-md-8\">\r\n  <h1 class=\"my-4\">Posts sobre\r\n    <small><strong>#{{hashtag.name}}</strong></small>\r\n  </h1>\r\n  <!-- Blog Post -->\r\n  <div *ngFor=\"let post of posts\" class=\"card mb-4\">\r\n    <img class=\"card-img-top\" src=\"https://placehold.it/750x300\" alt=\"Card image cap\">\r\n    <div class=\"card-body\">\r\n      <h2 class=\"card-title\">{{ post.title }}</h2>\r\n      <p class=\"card-text\">{{ post.description }}</p>\r\n      <a routerLink=\"/post/{{post.id}}\" class=\"btn btn-primary\">Leer mas &rarr;</a>\r\n    </div>\r\n    <div class=\"card-footer text-muted\">\r\n      Publicado el {{ post.createdAt }} por\r\n      <a routerLink=\"/profile/{{post.userId}}\">autor</a>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {TokenStorageService} from '../../services/token-storage.service';\r\nimport {HttpDataService} from '../../services/http-data.service';\r\nimport {ActivatedRoute} from '@angular/router';\r\nimport {Post} from '../../models/post';\r\nimport {Hashtag} from '../../models/hashtag';\r\n\r\n@Component({\r\n  selector: 'app-post-hashtags',\r\n  templateUrl: './post-hashtags.component.html',\r\n  styleUrls: ['./post-hashtags.component.css']\r\n})\r\nexport class PostHashtagsComponent implements OnInit {\r\n  postId: number;\r\n  post: Post;\r\n  tag: Hashtag;\r\n  hashtags: Hashtag[];\r\n  postHashtags: Hashtag[];\r\n\r\n  constructor(private tokenStorageService: TokenStorageService,\r\n              private httpDataService: HttpDataService,\r\n              private router: ActivatedRoute) {\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.router.params.subscribe(params => {\r\n      this.postId = +params.id;\r\n    });\r\n    this.getAllHashtags();\r\n    this.getHashtagsByPostId();\r\n  }\r\n  getAllHashtags(): void{\r\n    this.httpDataService.getAllHashtags().subscribe((response: any) => {\r\n      this.hashtags = response.content;\r\n    });\r\n  }\r\n  getHashtagsByPostId(): void{\r\n    this.httpDataService.getAllHashtagsByPostId(this.postId).subscribe((response: any) => {\r\n      this.postHashtags = response.content;\r\n      this.postHashtags.forEach(item => {\r\n        this.hashtags = this.hashtags.filter(obj => obj.id !== item.id);\r\n      });\r\n    });\r\n  }\r\n  assignHashtag(hashtagId): void {\r\n    this.httpDataService.assignHashtag(this.postId, hashtagId).subscribe((response: any) => {\r\n      this.ngOnInit();\r\n    });\r\n  }\r\n  unassignHashtag(hashtagId): void {\r\n    this.httpDataService.unassignHashtag(this.postId, hashtagId).subscribe((response: any) => {\r\n      this.ngOnInit();\r\n    });\r\n  }\r\n}\r\n","<a class=\"btn btn-primary\" href=\"/post/{{postId}}\" role=\"button\">Regresar al post</a>\r\n<br>\r\n\r\n<div class=\"card-body\">\r\n    <p>Hashtags asignados a este post:</p>\r\n  <div class=\"row\">\r\n    <p *ngFor = \"let tag of postHashtags\" class=\"hashtag-list\">\r\n      <a class=\"btn btn-secondary\" (click)=\"unassignHashtag(tag.id)\">\r\n        <strong>#{{tag.name}}</strong>\r\n      </a>\r\n    </p>\r\n  </div>\r\n</div>\r\n<br>\r\n<br>\r\n<div class=\"card-body\">\r\n  <p>Hashtags de easystory:</p>\r\n  <div class=\"row\">\r\n    <p *ngFor = \"let hashtag of hashtags\" class=\"hashtag-list\">\r\n      <a class=\"btn btn-secondary\" (click)=\"assignHashtag(hashtag.id)\">\r\n        <strong>#{{hashtag.name}}</strong>\r\n      </a>\r\n    </p>\r\n  </div>\r\n</div>\r\n","// user.service.ts\r\n// Users Resource API Middleware\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\n\r\nconst API_URL = 'https://easystory-api.herokuapp.com/api/users';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n  getAll(): Observable<any> {\r\n    return this.http.get(API_URL);\r\n  }\r\n}\r\n","import {Component, Input, OnInit} from '@angular/core';\r\nimport {Comment} from '../../models/comment';\r\nimport {HttpDataService} from '../../services/http-data.service';\r\nimport {User} from '../../models/user';\r\n\r\n@Component({\r\n  selector: 'app-list-comments',\r\n  templateUrl: './list-comments.component.html',\r\n  styleUrls: ['./list-comments.component.css']\r\n})\r\nexport class ListCommentsComponent implements OnInit {\r\n  @Input() postId: number;\r\n  comments: Comment[];\r\n  content: string;\r\n  author: string;\r\n  user: User;\r\n  constructor(private httpDataService: HttpDataService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.author = 'cargando...';\r\n    this.comments = [];\r\n    if (this.postId) {\r\n      console.log('Consiguiendo comentarios de post ', this.postId);\r\n      this.getCommentsByPostId();\r\n    }else {\r\n      console.log('postId no definido');\r\n    }\r\n  }\r\n  getCommentsByPostId(): void{\r\n    this.httpDataService.getAllCommentsByPostId(this.postId).subscribe((response: any) => {\r\n      this.comments = response.content.reverse();\r\n    });\r\n  }\r\n  addComment(): void{\r\n    console.log(this.content);\r\n    this.httpDataService.addComment(1, this.postId, {content: this.content})\r\n      .subscribe(response => {\r\n        console.log(response);\r\n        this.ngOnInit();\r\n    });\r\n  }\r\n  getAuthor(userId): string{\r\n    if (userId !== undefined) {\r\n      this.httpDataService.getUserById(userId).subscribe((response: any) => {\r\n        this.author = response.firstName + ' ' + response.lastName;\r\n      });\r\n      return this.author;\r\n    }\r\n    else {\r\n      return 'error';\r\n    }\r\n  }\r\n  removeComment(commentId): void {\r\n    this.httpDataService.removeComment(commentId).subscribe((response: any) => {\r\n      this.ngOnInit();\r\n    });\r\n  }\r\n\r\n\r\n}\r\n","<!-- Comments Form -->\r\n<div class=\"card my-4\">\r\n  <h5 class=\"card-header\">Deja un comentario</h5>\r\n  <div class=\"card-body\">\r\n      <div class=\"form-group\">\r\n        <input placeholder=\"Escribe un comentario aqui...\"\r\n               type=\"text\"\r\n               required\r\n               [(ngModel)]=\"content\"\r\n        >\r\n        <button type=\"submit\" class=\"btn btn-primary\" (click)=\"addComment()\">Enviar</button>\r\n      </div>\r\n  </div>\r\n</div>\r\n\r\n<!-- Single Comment -->\r\n<div *ngFor=\"let comment of comments\" class=\"media mb-4\">\r\n  <img class=\"d-flex mr-3 rounded-circle\" src=\"https://placehold.it/50x50\" alt=\"\">\r\n  <div class=\"media-body\">\r\n    <h5 class=\"mt-0\">{{comment.userId}} ({{ comment.createdAt }})</h5>\r\n    {{ comment.content }}\r\n  </div>\r\n  <button class=\"btn btn-danger\" (click)=\"removeComment(comment.id)\" >Borrar comentario</button>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport {FeedComponent} from './pages/feed/feed.component';\r\nimport {ProfileComponent} from './pages/profile/profile.component';\r\nimport {ViewPostComponent} from './pages/view-post/view-post.component';\r\nimport {PageNotFoundComponent} from './pages/page-not-found/page-not-found.component';\r\nimport {BookmarksComponent} from './pages/bookmarks/bookmarks.component';\r\nimport {NewPostComponent} from './pages/new-post/new-post.component';\r\nimport {EditProfileComponent} from './pages/edit-profile/edit-profile.component';\r\nimport {LoginComponent} from './pages/login/login.component';\r\nimport {RegisterComponent} from './pages/register/register.component';\r\nimport {EditPostsComponent} from './pages/edit-posts/edit-posts.component';\r\nimport {PostHashtagsComponent} from './pages/post-hashtags/post-hashtags.component';\r\nimport {HashtagSearchComponent} from './pages/hashtag-search/hashtag-search.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: '/login', pathMatch: 'full'},\r\n  { path: 'feed', component: FeedComponent },\r\n  { path: 'profile/:id', component: ProfileComponent },\r\n  { path: 'post/:id', component: ViewPostComponent },\r\n  { path: 'hashtag/:id', component: HashtagSearchComponent },\r\n  { path: 'bookmarks', component: BookmarksComponent },\r\n  { path: 'new-post', component: NewPostComponent},\r\n  { path: 'profile/:id/edit', component: EditProfileComponent},\r\n  // ,,\r\n  { path: 'login', component: LoginComponent},\r\n  { path: 'register', component: RegisterComponent},\r\n  { path: 'post/:id/edit', component: EditPostsComponent},\r\n  { path: 'post/:id/hashtags', component: PostHashtagsComponent},\r\n  { path: '**', component: PageNotFoundComponent},\r\n];\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forRoot(routes)\r\n  ],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient, HttpErrorResponse, HttpHeaders} from '@angular/common/http';\r\nimport {Observable, pipe, throwError} from 'rxjs';\r\nimport {Post} from '../models/post';\r\nimport {catchError, retry} from 'rxjs/operators';\r\nimport {Hashtag} from '../models/hashtag';\r\nimport {User} from '../models/user';\r\nimport {Bookmark} from '../models/bookmark';\r\nimport {Comment} from '../models/comment';\r\nimport {Subscribe} from '../models/subscribe';\r\nimport {Qualification} from '../models/qualification';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class HttpDataService {\r\n  // Base de los endpoints\r\n  basePath = 'https://easystory-api.herokuapp.com/api';\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  // Http Default Options\r\n  httpOptions = {\r\n    headers: new HttpHeaders({\r\n      'Content-Type': 'application/json'\r\n    })\r\n  };\r\n\r\n  // Error Handling API\r\n  handleError(error: HttpErrorResponse): Observable<never> {\r\n    if (error.error instanceof ErrorEvent) {\r\n      console.log('An error ocurred: ', error.error.message);\r\n    } else {\r\n      console.log(`API returned code ${error.status}, body was: ${error.error}`);\r\n    }\r\n    return throwError('Something happened with request, please try again later.');\r\n  }\r\n\r\n  // Get All Posts\r\n  getAllPosts(): Observable<Post> {\r\n    return this.http.get<Post>(`${this.basePath}/posts`, this.httpOptions)\r\n      .pipe(retry(2), catchError(this.handleError));\r\n  }\r\n  // Get post by id\r\n  getPostById(id): Observable<Post> {\r\n    return this.http.get<Post>(`${this.basePath}/posts/${id}`, this.httpOptions)\r\n      .pipe(retry(2), catchError(this.handleError));\r\n  }\r\n\r\n  // Get All Post By Userid\r\n  getAllPostByUserId(userId): Observable<Post> {\r\n    return this.http.get<Post>(`${this.basePath}/users/${userId}/posts`, this.httpOptions)\r\n      .pipe(retry(2), catchError(this.handleError));\r\n  }\r\n\r\n  // Edit a Post\r\n  updatePost(userId, postId, item): Observable<void>{\r\n    return this.http.put<void>(`${this.basePath}/users/${userId}/posts/${postId}`, JSON.stringify(item), this.httpOptions)\r\n      .pipe(retry(2), catchError(this.handleError));\r\n  }\r\n  // Add a new post\r\n  addNewPost(userId, item): Observable<Post> {\r\n    return this.http.post<Post>(`${this.basePath}/users/${userId}/posts`, JSON.stringify(item), this.httpOptions)\r\n      .pipe(retry(2), catchError(this.handleError));\r\n  }\r\n  // Get All Hashtags\r\n  getAllHashtags(): Observable<Hashtag> {\r\n    return this.http.get<Hashtag>(`${this.basePath}/hashtags`, this.httpOptions)\r\n      .pipe(retry(2), catchError(this.handleError));\r\n  }\r\n\r\n  // Get All Hashtags by Post Id\r\n  getAllHashtagsByPostId(postId): Observable<Hashtag> {\r\n    return this.http.get<Hashtag>(`${this.basePath}/posts/${postId}/hashtags`, this.httpOptions)\r\n      .pipe(retry(2), catchError(this.handleError));\r\n  }\r\n\r\n  // Get All Posts by HashtagId\r\n  getAllPostsByHashtagId(hashtagId): Observable<Hashtag> {\r\n    return this.http.get<Hashtag>(`${this.basePath}/hashtags/${hashtagId}/posts`, this.httpOptions)\r\n      .pipe(retry(2), catchError(this.handleError));\r\n  }\r\n\r\n\r\n\r\n  // Get user by id\r\n  getUserById(id): Observable<User> {\r\n    return this.http.get<User>(`${this.basePath}/users/${id}`, this.httpOptions)\r\n      .pipe(retry(2), catchError(this.handleError));\r\n  }\r\n\r\n  // Get user by id\r\n  getHashtagById(id): Observable<Hashtag> {\r\n    return this.http.get<Hashtag>(`${this.basePath}/hashtags/${id}`, this.httpOptions)\r\n      .pipe(retry(2), catchError(this.handleError));\r\n  }\r\n\r\n  // Get All Bookmarks by userId\r\n  getAllBookmarks(userId): Observable<Bookmark> {\r\n    return this.http.get<Bookmark>(`${this.basePath}/users/${userId}/bookmarks`, this.httpOptions)\r\n      .pipe(retry(2), catchError(this.handleError));\r\n  }\r\n\r\n  // Get All Bookmarks by userId\r\n  getAllCommentsByPostId(postId): Observable<Comment> {\r\n    return this.http.get<Comment>(`${this.basePath}/posts/${postId}/comments`, this.httpOptions)\r\n      .pipe(retry(2), catchError(this.handleError));\r\n  }\r\n\r\n  // Post a Comment\r\n  addComment(userId, postId, item): Observable<Comment> {\r\n    return this.http.post<Comment>(`${this.basePath}/users/${userId}/posts/${postId}/comments`, JSON.stringify(item), this.httpOptions)\r\n      .pipe(retry(2), catchError(this.handleError));\r\n  }\r\n  // Get All Bookmarks by userId\r\n  deleteBookmark(userId, postId): Observable<any> {\r\n    return this.http.delete<any>(`${this.basePath}/users/${userId}/posts/${postId}/bookmarks`, this.httpOptions)\r\n      .pipe(retry(2), catchError(this.handleError));\r\n  }\r\n\r\n  // Post a subscribe\r\n  addSubscription(user, userId, item): Observable<Subscribe>{\r\n    return this.http.post<Subscribe>(`${this.basePath}/users/${user}/subscriptions/${userId}`, JSON.stringify(item), this.httpOptions)\r\n      .pipe(retry(2), catchError(this.handleError));\r\n  }\r\n\r\n  // Cancel a suscription\r\n  removeSuscription(user, userId): Observable<any> {\r\n    return this.http.delete<any>(`${this.basePath}/users/${user}/subscriptions/${userId}`, this.httpOptions)\r\n      .pipe(retry(2), catchError(this.handleError));\r\n  }\r\n\r\n  // Get Subscription\r\n  getSubscription(user, userId): Observable<Subscribe>{\r\n    return this.http.get<Subscribe>(`${this.basePath}/users/${user}/subscriptions/${userId}`, this.httpOptions)\r\n      .pipe(retry(2), catchError(this.handleError));\r\n  }\r\n\r\n\r\n\r\n  // Edit Profile\r\n  editProfile(userId, item): Observable<User> {\r\n    return this.http.put<User>(`${this.basePath}/users/${userId}`, JSON.stringify(item), this.httpOptions)\r\n      .pipe(retry(2), catchError(this.handleError));\r\n  }\r\n\r\n  // Create a bookmark\r\n  addBookmark(userId, postId): Observable<Bookmark> {\r\n    return this.http.post<Bookmark>(`${this.basePath}/users/${userId}/posts/${postId}/bookmarks`, this.httpOptions)\r\n      .pipe(retry(2), catchError(this.handleError));\r\n  }\r\n\r\n  // Validate a Bookmark\r\n  validateBookmark(userId, postId): Observable<Bookmark> {\r\n    return this.http.get<Bookmark>(`${this.basePath}/users/${userId}/posts/${postId}/bookmarks`, this.httpOptions)\r\n      .pipe(retry(2), catchError(this.handleError));\r\n  }\r\n\r\n  // Remove a bookmark\r\n  removeBookmark(userId, postId): Observable<any> {\r\n    return this.http.delete<any>(`${this.basePath}/users/${userId}/posts/${postId}/bookmarks`, this.httpOptions)\r\n      .pipe(retry(2), catchError(this.handleError));\r\n  }\r\n\r\n  // Remove a post\r\n  removePost(userId, postId): Observable<any> {\r\n    return this.http.delete<any>(`${this.basePath}/users/${userId}/posts/${postId}`, this.httpOptions)\r\n      .pipe(retry(2), catchError(this.handleError));\r\n  }\r\n  removeComment(commentId): Observable<any> {\r\n    return this.http.delete<any>(`${this.basePath}/comments/${commentId}`, this.httpOptions)\r\n      .pipe(retry(2), catchError(this.handleError));\r\n  }\r\n\r\n  // Assign Hashtag\r\n  assignHashtag(postId, hashtagId): Observable<Post> {\r\n    return this.http.post<Post>(`${this.basePath}/posts/${postId}/hashtags/${hashtagId}`, this.httpOptions)\r\n      .pipe(retry(2), catchError(this.handleError));\r\n  }\r\n\r\n\r\n  // Unassign Hashtag\r\n  unassignHashtag(postId, hashtagId): Observable<any> {\r\n    return this.http.delete<any>(`${this.basePath}/posts/${postId}/hashtags/${hashtagId}`, this.httpOptions)\r\n      .pipe(retry(2), catchError(this.handleError));\r\n  }\r\n\r\n  // Get All Qualifications by postId\r\n  getAllQualificationsByPostId(postId): Observable<Qualification>{\r\n    return this.http.get<Qualification>(`${this.basePath}/posts/${postId}/qualifications`, this.httpOptions)\r\n      .pipe(retry(2), catchError(this.handleError));\r\n  }\r\n  // Post a Qualification\r\n  addQualification(userId, postId, item): Observable<Qualification>{\r\n    // tslint:disable-next-line:max-line-length\r\n    return this.http.post<Qualification>(`${this.basePath}/users/${userId}/posts/${postId}/qualifications`, JSON.stringify(item), this.httpOptions)\r\n      .pipe(retry(2), catchError(this.handleError));\r\n  }\r\n}\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}